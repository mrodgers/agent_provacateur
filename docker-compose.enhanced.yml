version: '3.8'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  entity-detector:
    build: 
      context: ./entity_detector_mcp
    ports:
      - "8082:8082"
    environment:
      - PORT=8082
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy

  graphrag:
    build:
      context: ./graphrag_mcp_py
    ports:
      - "9584:9584"
    environment:
      - PORT=9584
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy

  enhanced-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    ports:
      - "8000:8000"
    environment:
      - ENTITY_DETECTOR_URL=http://entity-detector:8082
      - GRAPHRAG_URL=http://graphrag:9584
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PYTHONUNBUFFERED=1
    volumes:
      - ./logs:/app/logs
    depends_on:
      - entity-detector
      - graphrag
    command: ["python", "-m", "agent_provocateur", "mcp", "--host", "0.0.0.0"]

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - BACKEND_URL=http://enhanced-mcp-server:8000
    volumes:
      - ./logs:/app/logs
    depends_on:
      - enhanced-mcp-server

volumes:
  redis-data: